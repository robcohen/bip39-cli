name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-release:
    name: Build Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            asset_name: bip39-linux-x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            asset_name: bip39-windows-x86_64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            asset_name: bip39-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            asset_name: bip39-macos-aarch64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            asset_name: bip39-linux-aarch64

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    
    - name: Install cross (for cross-compilation)
      if: matrix.os == 'ubuntu-latest'
      run: cargo install cross
    
    - name: Build release binary
      run: |
        if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
          cross build --release --target ${{ matrix.target }}
        else
          cargo build --release --target ${{ matrix.target }}
        fi
      shell: bash
    
    - name: Prepare asset
      run: |
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          cp target/${{ matrix.target }}/release/bip39.exe ${{ matrix.asset_name }}
        else
          cp target/${{ matrix.target }}/release/bip39 ${{ matrix.asset_name }}
        fi
      shell: bash
    
    - name: Upload Release Asset
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ matrix.asset_name }}

